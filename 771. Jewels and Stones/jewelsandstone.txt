
You're given strings jewels representing the types of stones that are jewels, and stones representing the stones you have. Each character in stones is a type of stone you have. You want to know how many of the stones you have are also jewels.

Letters are case sensitive, so "a" is considered a different type of stone from "A".

 

Example 1:

Input: jewels = "aA", stones = "aAAbbbb"
Output: 3
Example 2:

Input: jewels = "z", stones = "ZZ"
Output: 0

ANSWER
Time Complexity : O(n^2)
Space Complexity: O(1)

class Solution {
public:
    int numJewelsInStones(string jewels, string stones) {
       int jwel_count=0;
        for(int i=0;i<jewels.size();i++)
        {
            char check=jewels[i];
            for(int j=0;j<stones.size();j++)
            {
                if(check==stones[j])
                {
                    jwel_count+=1;
                }
            }
        }
        return jwel_count;
    }
};


Other method(using unordered_map)
Time complexity :O(n)
Space Compexity :O(n)

class Solution {
public:
    int numJewelsInStones(string jewels, string stones) {
       int jwel_count=0;
        unordered_map<int,int>mpp;
      for(int i=0;i<stones.size();i++)
      {
          mpp[stones[i]]++;
      }
        for(auto it:jewels)
        {
            if(mpp[it]>0)
            {
                jwel_count+=mpp[it];
            }
        }
        return jwel_count;
    }
};